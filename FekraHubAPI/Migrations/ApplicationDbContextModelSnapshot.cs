// <auto-generated />
using System;
using FekraHubAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FekraHubAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseEvent", b =>
                {
                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleID")
                        .HasColumnType("int");

                    b.HasKey("EventID", "ScheduleID");

                    b.HasIndex("ScheduleID");

                    b.ToTable("CourseEvent");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.AspNetPermissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("AspNetPermissions");

                    b.HasData(
                        new
                        {
                            Id = 20,
                            Type = "GetUsers",
                            Value = "GetUsers"
                        },
                        new
                        {
                            Id = 21,
                            Type = "AddUsers",
                            Value = "AddUsers"
                        },
                        new
                        {
                            Id = 22,
                            Type = "GetStudentsCourse",
                            Value = "GetStudentsCourse"
                        },
                        new
                        {
                            Id = 23,
                            Type = "UpdateStudentsCourse",
                            Value = "UpdateStudentsCourse"
                        },
                        new
                        {
                            Id = 24,
                            Type = "GetTeachersCourse",
                            Value = "GetTeachersCourse"
                        },
                        new
                        {
                            Id = 25,
                            Type = "UpdateTeachersCourse",
                            Value = "UpdateTeachersCourse"
                        },
                        new
                        {
                            Id = 26,
                            Type = "GetContracts",
                            Value = "GetContracts"
                        },
                        new
                        {
                            Id = 27,
                            Type = "ManageEvents",
                            Value = "ManageEvents"
                        },
                        new
                        {
                            Id = 28,
                            Type = "GetEvents",
                            Value = "GetEvents"
                        },
                        new
                        {
                            Id = 29,
                            Type = "GetStudentsAttendance",
                            Value = "GetStudentsAttendance"
                        },
                        new
                        {
                            Id = 30,
                            Type = "UpdateStudentsAttendance",
                            Value = "UpdateStudentsAttendance"
                        },
                        new
                        {
                            Id = 31,
                            Type = "GetTeachersAttendance",
                            Value = "GetTeachersAttendance"
                        },
                        new
                        {
                            Id = 32,
                            Type = "UpdateTeachersAttendance",
                            Value = "UpdateTeachersAttendance"
                        },
                        new
                        {
                            Id = 33,
                            Type = "InsertUpdateStudentsReports",
                            Value = "InsertUpdateStudentsReports"
                        },
                        new
                        {
                            Id = 34,
                            Type = "GetStudentsReports",
                            Value = "GetStudentsReports"
                        },
                        new
                        {
                            Id = 35,
                            Type = "ApproveReports",
                            Value = "ApproveReports"
                        },
                        new
                        {
                            Id = 36,
                            Type = "ManagePayrolls",
                            Value = "ManagePayrolls"
                        },
                        new
                        {
                            Id = 37,
                            Type = "ManageBooks",
                            Value = "ManageBooks"
                        },
                        new
                        {
                            Id = 38,
                            Type = "DeleteSchoolData",
                            Value = "DeleteSchoolData"
                        },
                        new
                        {
                            Id = 39,
                            Type = "ResetData",
                            Value = "ResetData"
                        });
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.AttendanceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AttendanceStatuses");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Lessons")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.CourseSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("CourseID");

                    b.ToTable("CourseSchedules");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EventsTypes");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.ParentInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StudentID");

                    b.ToTable("ParentInvoices");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.PayRoll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("PayRoll");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Improved")
                        .HasColumnType("bit");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LocationID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.SchoolInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContractPages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmailPortNumber")
                        .HasColumnType("int");

                    b.Property<string>("EmailServer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FromEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LogoBase64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SchoolOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StudentsReportsKeys")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlDomain")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SchoolInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContractPages = "[\"\\u003C!DOCTYPE html\\u003E\\u003Chtml lang=\\u0027en\\u0027\\u003E\\u003Chead\\u003E\\u003Cmeta charset=\\u0027UTF-8\\u0027\\u003E\\u003Cmeta name=\\u0027viewport\\u0027 content=\\u0027width=device-width, initial-scale=1.0\\u0027\\u003E\\u003Ctitle\\u003Epage 1\\u003C/title\\u003E\\u003C/head\\u003E\\u003Cbody\\u003E\\u003Cstyle\\u003E.container{width: 90%;margin: 0 auto;padding: 20px;font-family: Arial, Helvetica, sans-serif;font-size: 16px;size: A4;}.content{display: flex;justify-content: space-between;flex-wrap: wrap;}.container *{font-size: 14px;}h3{font-size: 16px !important;}.containerLeft{width: 45%;text-align: left;padding: 10px;}.containerRight{width: 45%;text-align: left;padding: 10px;}.table{width: 100%;border-collapse: collapse;overflow: hidden;}.table td{padding: 5px;}.table td:first-child {width: 33%;}.header{width: 100%;display: flex;justify-content: start;border-bottom: 3px solid rgba(0, 0, 0, 0.239);margin-bottom: 40px;}.header div{vertical-align: bottom;height: 60px;}img{width: 60px;}\\u003C/style\\u003E\\u003Cdiv class=\\u0027container\\u0027 \\u003E\\u003Cdiv class=\\u0027header\\u0027\\u003E\\u003Cimg src=\\u0027data:image/png;base64,{fekrahublogo}\\u0027 alt=\\u0027logo\\u0027\\u003E\\u003Cdiv\\u003E\\u003Ch3 style=\\u0027color:#0000007d ;\\u0027\\u003EFekra, der bestc Weg\\u003Cbr\\u003Ezum Arabisch Lernen\\u003C/h3\\u003E\\u003C/div\\u003E\\u003C/div\\u003E\\u003Cdiv class=\\u0027content\\u0027\\u003E\\u003Cdiv class=\\u0027containerLeft\\u0027\\u003E\\u003Ch3 style=\\u0027margin-bottom: 0;\\u0027\\u003EKursvertrag f\\u00FCr Arabischunterricht \\u003C/h3\\u003E\\u003Cspan\\u003Ezwischen Fekra, der beste Weg zum Arabisch Lernen,Sospanhie-Charlotten-Str. 90, 14059 Berlin vertreten durch denInhaber Yousef El Dada und den\\u003C/span\\u003E\\u003Cb\\u003ESch\\u00FCler / den\\u003C/b\\u003E\\u003Cb style=\\u0027display: block;\\u0027\\u003ESch\\u00FClerinnen:\\u003C/b\\u003E\\u003Cbr\\u003E\\u003Ctable class=\\u0027table\\u0027 border=\\u00271\\u0027\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003EName\\u003C/td\\u003E\\u003Ctd\\u003E{student.FirstName} {student.LastName}\\u003C/td\\u003E\\u003C/tr\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003EGeb.Datum\\u003C/td\\u003E\\u003Ctd\\u003E{student.Birthday.Date.ToString(\\u0027yyyy-MM-dd\\u0027)}\\u003C/td\\u003E\\u003C/tr\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003EGeb.Ort\\u003C/td\\u003E\\u003Ctd\\u003E{student.Nationality}\\u003C/td\\u003E\\u003C/tr\\u003E\\u003C/table\\u003E\\u003Ch5\\u003Egesetzlich vertreten durch die Erziehungsberechtigten:\\u003C/h5\\u003E\\u003Ctable class=\\u0027table\\u0027 border=\\u00271\\u0027\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003EName\\u003C/td\\u003E\\u003Ctd\\u003E{parent.FirstName} {parent.LastName}\\u003C/td\\u003E\\u003C/tr\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003EStra\\u00DFe\\u003C/td\\u003E\\u003Ctd\\u003E{parent.Street} {parent.StreetNr}\\u003C/td\\u003E\\u003C/tr\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003EPLZ, Ort\\u003C/td\\u003E\\u003Ctd\\u003E{parent.ZipCode}\\u003C/td\\u003E\\u003C/tr\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003ETel. Mutter\\u003C/td\\u003E\\u003Ctd\\u003E{parent.EmergencyPhoneNumber}\\u003C/td\\u003E\\u003C/tr\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003ETel. Vater\\u003C/td\\u003E\\u003Ctd\\u003E{parent.PhoneNumber}\\u003C/td\\u003E\\u003C/tr\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003EEmail\\u003C/td\\u003E\\u003Ctd\\u003E{parent.Email}\\u003C/td\\u003E\\u003C/tr\\u003E\\u003C/table\\u003E\\u003Ch5\\u003E1. Bildungsziele\\u003C/h5\\u003E\\u003Cspan\\u003EDie Sch\\u00FCler/Sch\\u00FClerinnen werden in arabischer Sprache alsFremdsprache/Herkunftssprache und in arabischerLandeskunde unterrichtet.\\u003C/span\\u003E\\u003Ch5\\u003E2. Unterrichtsort, Unterrichtstermine\\u003C/h5\\u003E\\u003Cspan\\u003EDer Unterricht wird in den jeweiligen Schulr\\u00E4umen vonFekra, der beste Weg zum Arabisch Lernen durchgef\\u00FChrt.Der Unterricht findet in der Regel einmal W\\u00F6chentlich (sa) inder Zeit von 10:00 bis 13:00 statt.\\u003C/span\\u003E\\u003Ch5\\u003E3. Aufsicht\\u003C/h5\\u003E\\u003Cspan\\u003EDie Hausordnung des Unterrichtsortes muss in der jeweilsg\\u00FCltigen Fassung eingehalten werden. Die Aufsichtspflichtder \\u00DCbungsleiter/innen beschr\\u00E4nkt sich auf den vermietetenUnterrichtsbereich der Schulr\\u00E4ume sowie auf dieUnterrichtszeiten.\\u003C/span\\u003E\\u003Ch5\\u003E4. Haftung\\u003C/h5\\u003E\\u003Cspan\\u003EF\\u00FCr Sch\\u00E4den, die von Sch\\u00FClern/Sch\\u00FClerinnen verursachtwerden, haften diese oder die Eltern/Erziehungsberechtigtenim Rahmen der gesetzlichen Bestimmungen. Fekra, derbeste Weg zum Arabisch Lernen unterh\\u00E4lt eineHaftpflichtversicherung nur f\\u00FCr die Dauer der Erteilung desUnterrichts; sie ist auf Vorsatz und grobe Fahrl\\u00E4ssigkeitbeschr\\u00E4nkt. Den Eltern/Erziehungsberechtigten wirdempfohlen, f\\u00FCr den/die Sch\\u00FCler/in - sofern nicht schongeschehen - eine private Haftpflichtversicherung undUnfallversicherung abzuschlie\\u00DFen. F\\u00FCr den Verlustmitgebrachter Sachen (z.B. Fahrrad, Handy, Schmuck,Garderobe) wird keine Haftung \\u00FCbernommen.\\u003C/span\\u003E\\u003C/div\\u003E\\u003Cdiv class=\\u0027containerRight\\u0027\\u003E\\u003Ch5\\u003E5. Kursgeb\\u00FChren (Zzgl. Unterrichtsmaterial)\\u003C/h5\\u003E\\u003Cspan\\u003EEs wird eine einmalige Anmeldegeb\\u00FChr von 0.00 EUR proSch\\u00FCler erhoben.\\u003C/span\\u003E\\u003Cbr\\u003E\\u003Cspan\\u003EDie Kursgeb\\u00FChren betragen f\\u00FCr ein Schuljahr 750.00 EURpro Sch\\u00FCler ( Brutto).\\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E\\u003Cu\\u003EDie Nichtteilnahme eines Sch\\u00FClers/Sch\\u00FClerin am Unterricht befreit ihn/sie nicht von der Entrichtung der Kursgeb\\u00FChren.\\u003C/u\\u003E. In besonderen F\\u00E4llen, wie dauerhafte Erkrankung, Ortswechsel und dergleichen, verzichtet Fekra, der beste Weg zum Arabisch Lernen auf die Kursgeb\\u00FChren. Die besonderen Gr\\u00FCnde sind jedoch zu belegen.\\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003EDie \\u00DCberweisung der Kursgeb\\u00FChren f\\u00FCr das Schuljahr in H\\u00F6he von 750.00 EUR Brutto pro Sch\\u00FCler wird unter Angabe der Rechnungsnummer zum jeweils 1. eines jeden Monats auf folgendes Bankkonto erbeten:\\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Ctable class=\\u0027table\\u0027 border=\\u00271\\u0027\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003EEmpf\\u00E4nger\\u003C/td\\u003E\\u003Ctd\\u003EYousef El Dada\\u003C/td\\u003E\\u003C/tr\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003EIBAN\\u003C/td\\u003E\\u003Ctd\\u003EDE09 1005 0000 0190 7682 40\\u003C/td\\u003E\\u003C/tr\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003EBIC\\u003C/td\\u003E\\u003Ctd\\u003EBELADEBEXXX\\u003C/td\\u003E\\u003C/tr\\u003E\\u003Ctr\\u003E\\u003Ctd\\u003EVerwendungszweck \\u003C/td\\u003E\\u003Ctd\\u003Ek Rechnungsnummer\\u003C/td\\u003E\\u003C/tr\\u003E\\u003C/table\\u003E\\u003Ch5\\u003E6. Zeugnis\\u003C/h5\\u003E\\u003Cspan\\u003EDie erbrachten Leistungen des Sch\\u00FClers/der Sch\\u00FClerin werden am Ende des Schuljahres in schriftlicher Form best\\u00E4tigt. Die Aush\\u00E4ndigung des Zeugnisses ist an die vollst\\u00E4ndige Begleichung der j\\u00E4hrlichen Kursgeb\\u00FChr gebunden.\\u003C/span\\u003E\\u003Ch5\\u003E7. Dauer, Beendigung des Schulvertrages\\u003C/h5\\u003E\\u003Cspan\\u003EDer Schulvertrag wird auf unbestimmte Zeit abgeschlossen. Er endet:\\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003Ea- wenn Fekra, der beste Weg zum Arabisch Lernen die Gesch\\u00E4ftst\\u00E4tigkeit einstellt.\\u003C/span\\u003E\\u003C/br\\u003E\\u003Cspan\\u003EOder:\\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003Eb- durch K\\u00FCndigung zum Ende des Schuljahres (bis 30.06.2022).\\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E\\u003Cu\\u003EDie K\\u00FCndigung erfolgt nur in schriftlicher Form\\u003C/u\\u003E\\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003EUnterbleibt eine K\\u00FCndigung, verl\\u00E4ngert sich der Schulvertrag stillschweigend um ein weiteres Schuljahr und kann erst zum n\\u00E4chstm\\u00F6glichen Termin gek\\u00FCndigt werden.\\u003C/span\\u003E\\u003C/div\\u003E\\u003C/div\\u003E\\u003Cdiv style=\\u0027display: flex; justify-content: space-around; width: 100%;margin-top: 80px;\\u0027\\u003E\\u003Cdiv style=\\u0027 width: 45%;text-align:left;\\u0027\\u003E\\u003Ch4 \\u003ETelefon : \\u002B4917673245802\\u003Cbr\\u003E\\u003C/br\\u003EEmail : fekraberlin@gmail.com\\u003Cbr\\u003E\\u003C/br\\u003EAdresse : Hardenbergplatz 2, 10623 Berlin\\u003C/h4\\u003E\\u003C/div\\u003E\\u003Cdiv dir=\\u0027rtl\\u0027 style=\\u0027width:48%;text-align: right;\\u0027\\u003E\\u003Cdiv style=\\u0027color: white;background-color: black;width: 80%;margin:0 auto ;\\u0027\\u003E\\u003Ch1 style=\\u0027padding: 20px;font-size: 25px;\\u0027\\u003E\\u0645\\u062F\\u0631\\u0633\\u0629 \\u0641\\u0643\\u0631\\u0629 ... \\u003Cbr\\u003E\\u0627\\u0644\\u0637\\u0631\\u064A\\u0642 \\u0627\\u0644\\u0623\\u0641\\u0636\\u0644 \\u0644\\u062A\\u0639\\u0644\\u0645 \\u0627\\u0644\\u0644\\u063A\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\\u003C/h1\\u003E\\u003C/div\\u003E\\u003C/div\\u003E\\u003C/div\\u003E\\u003C/div\\u003E\\u003C/body\\u003E\\u003C/html\\u003E\",\"\\u003C!DOCTYPE html\\u003E\\u003Chtml lang=\\u0027en\\u0027\\u003E\\u003Chead\\u003E\\u003Cmeta charset=\\u0027UTF-8\\u0027\\u003E\\u003Cmeta name=\\u0027viewport\\u0027 content=\\u0027width=device-width, initial-scale=1.0\\u0027\\u003E\\u003Ctitle\\u003EPage 2\\u003C/title\\u003E\\u003C/head\\u003E\\u003Cbody\\u003E\\u003Cstyle\\u003E.container{width: 90%;margin: 0 auto;padding: 20px;font-family: Arial, Helvetica, sans-serif;font-size: 16px;size: A4;}.content{display: flex;justify-content: space-between;flex-wrap: wrap;}.container *{font-size: 14px;}h3{font-size: 16px !important;}.containerLeft{width: 45%;text-align: left;padding: 10px;}.containerRight{width: 45%;text-align: left;padding: 10px;}.table{width: 100%;border-collapse: collapse;overflow: hidden;}.table td{padding: 5px;}.table td:first-child {width: 33%;}.header{width: 100%;display: flex;justify-content: start;border-bottom: 3px solid rgba(0, 0, 0, 0.239);margin-bottom: 40px;}.header div{vertical-align: bottom;height: 60px;}img{width: 60px;}\\u003C/style\\u003E\\u003Cdiv class=\\u0027container\\u0027 style=\\u0027margin-top:30px;\\u0027\\u003E\\u003Cdiv class=\\u0027header\\u0027\\u003E\\u003Cimg src=\\u0027data:image/png;base64,{fekrahublogo}\\u0027 alt=\\u0027logo\\u0027\\u003E\\u003Cdiv\\u003E\\u003Ch3 style=\\u0027color:#0000007d ;\\u0027\\u003EFekra, der bestc Weg \\u003Cbr\\u003Ezum Arabisch Lernen\\u003C/h3\\u003E\\u003C/div\\u003E\\u003C/div\\u003E\\u003Cdiv class=\\u0027content\\u0027\\u003E\\u003Cdiv class=\\u0027containerLeft\\u0027\\u003E\\u003Ch1\\u003EInformation zur Verarbeitung\\u003Cbr\\u003Epersonenbezogener Daten\\u003C/h1\\u003E\\u003Cspan\\u003EVerantwortlicher:\\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003EYousef El Dada Sophie-Charlotten- Str. 90 14059 Berlin Email: Fekraberlin@gmail.com Telefon: \\u002B49 176 43210167\\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E 1.Erhebung und Speicherung personenbezogener Daten, Art und Zweck und deren Verwendung Wenn Sie sich als Interessent*in und / oder Teilnehmer*in unserer Kurse registrieren: \\u003C/span\\u003E\\u003Cspan\\u003E\\u2022 Anrede, Vorname, Nachname (bei Kindern: des/der Erziehungsberechtigten)\\u003C/span\\u003E\\u003Cbr\\u003E\\u003Cspan\\u003E\\u2022 Anschrift,\\u003C/span\\u003E\\u003Cbr\\u003E\\u003Cspan\\u003E\\u2022 Telefonnummer (Festnetz und/oder Mobilfunk), \\u003C/span\\u003E\\u003Cbr\\u003E\\u003Cspan\\u003E\\u2022 gu\\u0308ltige E-Mail-Adresse,\\u003C/span\\u003E\\u003Cbr\\u003E\\u003Cspan\\u003E\\u2022 Geburtsdatum\\u003C/span\\u003E\\u003Cbr\\u003E\\u003Cspan\\u003E\\u2022 ggf. Bankverbindungsdaten (bei Lastschrifteinzugsverfahren)\\u003C/span\\u003E\\u003Cbr\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E Diese Daten sind notwendig zu eventuellen Vertragsabschlu\\u0308ssen und Korrespondenz mit Ihnen, zur Rechnungsstellung, zur Abwicklung von evtl. vorliegenden Haftungsanspru\\u0308chen oder der Geltendmachung etwaiger Anspru\\u0308che gegen Sie. Die Datenverarbeitung erfolgt nach Art. 6 Abs. 1 S. 1 lit. b DSGVO zu den genannten und ist fu\\u0308r die beidseitige Erfu\\u0308llung von Verpflichtungen aus dem jeweiligen Vertrags erforderlich. Die von uns erhobenen personenbezogenen Daten werden bis zum Ablauf der gesetzlichen Aufbewahrungs- und Dokumentationspflichten (aus HGB, StGB oder AO) nach Art. 6 Abs. 1 S.1 lit. C DSGVO gelo\\u0308scht, es sei denn, dass Sie in eine daru\\u0308ber hinausgehende Speicherung nach Art. 6 Abs. 1 S.1 lit. C DSGVO eingewilligt haben. \\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E2. Weitergabe von Daten an Dritte \\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003EEine U\\u0308bermittlung Ihrer perso\\u0308nlichen Daten an Dritte zu anderen als den im Folgenden aufgefu\\u0308hrten Zwecken findet nicht statt. Nur soweit dies nach Art. 6 Abs. 1 S. 1 lit. b DSGVO fu\\u0308r die Abwicklung unseres Auftrags mit Ihnen erforderlich ist, werden Ihre personenbezogenen Daten an Dritte weitergegeben. Hierzu geho\\u0308rt insbesondere die Weitergabe an unsere Mitarbeiter, die soweit fu\\u0308r die Aufrechterhaltung Abla\\u0308ufe notwendig ist, unsere Buchhaltung, steuerliche und Unternehmens-berater sowie auf Verlangen an o\\u0308ffentliche Beho\\u0308rden, wie das Finanzamt. \\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E3. Einwilligung in die Datennutzung zu Werbe- und PR- Zwecken Sind Sie mit den folgenden Nutzungszwecken einverstanden, kreuzen Sie diese bitte entsprechend an. Wollen Sie keine Einwilligung erteilen, lassen Sie das Feld bitte frei. \\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E\\u25A2 Ich willige ein, dass wir im Rahmen unsere schulischen Arbeit Fotound Videoaufnahmen in unseren Ra\\u0308umen von Ihnen bzw. Ihren Kindern machen, die fu\\u0308r unsere Webauftritte, zu PR- und Werbezwecken nutzen. \\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E4. Betroffenenrechte \\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cul\\u003E\\u003Cli\\u003ESie haben das Recht: gema\\u0308\\u00DF Art. 7 Abs. 3 DSGVO Ihre einmal erteilte Einwilligung jederzeit gegenu\\u0308ber uns zu widerrufen. Dies hat zur Folge, dass wir die Datenverarbeitung, die auf dieser Einwilligung beruhte, fu\\u0308r die Zukunft nicht mehr fortfu\\u0308hren du\\u0308rfen; \\u003C/li\\u003E\\u003C/ul\\u003E\\u003C/div\\u003E\\u003Cdiv class=\\u0027containerRight\\u0027\\u003E\\u003Cul\\u003E\\u003Cli\\u003Egema\\u0308\\u00DF Art. 15 DSGVO Auskunft u\\u0308ber Ihre von uns verarbeiteten personenbezogenen Daten zu verlangen. Insbesondere ko\\u0308nnen Sie Auskunft u\\u0308ber die Verarbeitungszwecke, die Kategorie der personenbezogenen Daten, die Kategorien von Empfa\\u0308ngern, gegenu\\u0308ber denen Ihre Daten offengelegt wurden oder werden, die geplante Speicherdauer, das Bestehen eines Rechts auf Berichtigung, Lo\\u0308schung, Einschr\\u00E4nkung der Verarbeitung oder Widerspruch, das Bestehen eines Beschwerderechts, die Herkunft ihrer Daten, sofern diese nicht bei uns erhoben wurden, sowie u\\u0308ber das Bestehen einer automatisierten Entscheidungsfindung einschlie\\u00DFlich Profiling und ggf. aussagekr\\u00E4ftigen Informationen zu deren Einzelheitenverlangen; \\u003C/li\\u003E\\u003C/ul\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E\\u2022 gem\\u00E4\\u00DF Art. 16 DSGVO unverz\\u00FCglich die Berichtigung unrichtiger oder Vervollst\\u00E4ndigung Ihrer bei uns gespeicherten personenbezogenen Daten zu verlangen; \\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E\\u2022 gem\\u00E4\\u00DF Art. 17 DSGVO die L\\u00F6schung Ihrer bei uns gespeicherten personenbezogenen Daten zu verlangen, soweit nicht die Verarbeitung zur Aus\\u00FCbung des Rechts auf freie Meinungs\\u00E4u\\u00DFerung und Information, zur Erf\\u00FCllung einer rechtlichen Verpflichtung, aus Gr\\u00FCnden des \\u00F6ffentlichen Interesses oder zur Geltendmachung, Aus\\u00FCbung oder Verteidigung von Rechtsanspru\\u0308chen erforderlich ist; \\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E\\u2022 gem\\u00E4\\u00DF Art. 18 DSGVO die Einschr\\u00E4nkung der Verarbeitung Ihrer personenbezogenen Daten zu verlangen, soweit die Richtigkeit der Daten von Ihnen bestritten wird, die Verarbeitung unrechtm\\u00E4\\u00DFig ist, Sie aber deren L\\u00F6schung ablehnen und wir die Daten nicht mehr ben\\u00F6tigen, Sie jedoch diese zur Geltendmachung, Aus\\u00FCbung oder Verteidigung von Rechtsanspr\\u00FCchen ben\\u00F6tigen oder Sie gem\\u00E4\\u00DF Art. 21 DSGVO Widerspruch gegen die Verarbeitung eingelegt haben; \\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E\\u2022 gem\\u00E4\\u00DF Art. 20 DSGVO Ihre personenbezogenen Daten ,die Sie uns bereitgestellt haben, in einem strukturierten, g\\u00E4ngigen und maschinenlesebaren Format zu erhalten oder die \\u00DCbermittlung an einen anderen Verantwortlichen zu verlangen;\\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E\\u2022 gem\\u00E4\\u00DF Art. 77 DSGVO sich bei einer Aufsichtsbeh\\u00F6rde zu beschweren. In der Regel k\\u00F6nnen Sie sich hierf\\u00FCr an die Aufsichtsbeh\\u00F6rde Ihres \\u00FCblichen Aufenthaltsortes oder Arbeitsplatzes oder unseres Firmensitzes wenden\\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003E\\u003Cb\\u003E Widerspruchsrecht \\u003C/b\\u003E\\u003C/span\\u003E\\u003Cbr\\u003E\\u003C/br\\u003E\\u003Cspan\\u003ESofern Ihre personenbezogenen Daten auf Grundlage von berechtigten Interessen gem\\u00E4\\u00DF Art. 6 Abs. 1 S. 1 lit. f DSGVO verarbeitet werden, haben Sie das Recht, gem\\u00E4\\u00DF Art. 21 DSGVO Widerspruch gegen die Verarbeitung Ihrer personenbezogenen Daten einzulegen, soweit daf\\u00FCr Gr\\u00FCnde vorliegen, die sich aus Ihrer besonderen Situation ergeben. Mochten Sie von Ihrem Widerspruchsrecht Gebrauch machen, gen\\u00FCgt eine E-Mail an uns\\u003C/span\\u003E\\u003C/div\\u003E\\u003C/div\\u003E\\u003Cdiv style=\\u0027display: flex; justify-content: space-around; width: 100%;margin-top: 50px;\\u0027\\u003E\\u003Cdiv style=\\u0027 width: 45%;text-align:left;\\u0027\\u003E\\u003Ch4\\u003ETelefon : \\u002B4917673245802\\u003Cbr\\u003E\\u003C/br\\u003EEmail : fekraberlin@gmail.com\\u003Cbr\\u003E\\u003C/br\\u003EAdresse : Hardenbergplatz 2, 10623 Berlin\\u003C/h4\\u003E\\u003C/div\\u003E\\u003Cdiv dir=\\u0027rtl\\u0027 style=\\u0027width:48%;text-align: right;\\u0027\\u003E\\u003Cdiv style=\\u0027color: white;background-color: black;width: 80%;margin:0 auto ;\\u0027\\u003E\\u003Ch1 style=\\u0027padding: 20px;font-size: 25px;\\u0027\\u003E\\u0645\\u062F\\u0631\\u0633\\u0629 \\u0641\\u0643\\u0631\\u0629 ... \\u003Cbr\\u003E\\u0627\\u0644\\u0637\\u0631\\u064A\\u0642 \\u0627\\u0644\\u0623\\u0641\\u0636\\u0644 \\u0644\\u062A\\u0639\\u0644\\u0645 \\u0627\\u0644\\u0644\\u063A\\u0629 \\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\\u003C/h1\\u003E\\u003C/div\\u003E\\u003C/div\\u003E\\u003C/div\\u003E\\u003C/div\\u003E\\u003C/body\\u003E\\u003C/html\\u003E\"]",
                            EmailPortNumber = 587,
                            EmailServer = "smtp.ionos.de",
                            FromEmail = "info@fekrahub.com",
                            LogoBase64 = "",
                            Password = "Fekra@hub2024",
                            SchoolName = "Fekra Hub",
                            SchoolOwner = "Owner",
                            StudentsReportsKeys = "[\"\\u0627\\u0644\\u0625\\u0646\\u062A\\u0628\\u0627\\u0647 \\u0641\\u064A \\u0627\\u0644\\u062F\\u0631\\u0633\",\"\\u0627\\u0644\\u0645\\u0634\\u0627\\u0631\\u0643\\u0629 \\u0641\\u064A \\u0627\\u0644\\u0635\\u0641\",\"\\u0627\\u0644\\u0625\\u0645\\u0644\\u0627\\u0621\",\"\\u0627\\u0644\\u0642\\u0631\\u0627\\u0621\\u0629\",\"\\u0627\\u0644\\u062E\\u0637\",\"\\u0627\\u0644\\u0642\\u0648\\u0627\\u0639\\u062F\",\"\\u0625\\u062A\\u0642\\u0627\\u0646 \\u0627\\u0644\\u062F\\u0631\\u0633\",\"\\u0631\\u0648\\u062D \\u0627\\u0644\\u0645\\u0646\\u0627\\u0641\\u0633\\u0629\",\"\\u0627\\u0644\\u0625\\u0646\\u062F\\u0645\\u0627\\u062C \\u0641\\u064A \\u0627\\u0644\\u0635\\u0641 \\u0645\\u0639 \\u0643\\u0644 \\u0645\\u0646 \\u0627\\u0644\\u0645\\u0639\\u0644\\u0645 \\u0648\\u0627\\u0644\\u062A\\u0644\\u0627\\u0645\\u064A\\u0630 \\u0627\\u0644\\u0622\\u062E\\u0631\\u064A\\u0646\",\"\\u0627\\u0644\\u0625\\u0644\\u062A\\u0632\\u0627\\u0645 \\u0628\\u0623\\u0648\\u0642\\u0627\\u062A \\u0627\\u0644\\u062F\\u0648\\u0627\\u0645\",\"\\u0627\\u0644\\u0625\\u0644\\u062A\\u0632\\u0627\\u0645 \\u0628\\u0642\\u0648\\u0627\\u0639\\u062F \\u0627\\u0644\\u0623\\u062F\\u0628 \\u0627\\u0644\\u0639\\u0627\\u0645\\u0629\",\"\\u0645\\u0644\\u0627\\u062D\\u0638\\u0627\\u062A \\u0625\\u0636\\u0627\\u0641\\u064A\\u0629\",\"\\u0627\\u0644\\u0625\\u0642\\u062A\\u0631\\u0627\\u062D\\u0627\\u062A\"]",
                            UrlDomain = "http://localhost:3000"
                        });
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseID");

                    b.HasIndex("ParentID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.StudentAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<int?>("StatusID")
                        .HasColumnType("int");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseID");

                    b.HasIndex("StatusID");

                    b.HasIndex("StudentID");

                    b.ToTable("StudentAttendances");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.StudentContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentID");

                    b.ToTable("StudentContract");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.TeacherAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<int?>("StatusID")
                        .HasColumnType("int");

                    b.Property<string>("TeacherID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseID");

                    b.HasIndex("StatusID");

                    b.HasIndex("TeacherID");

                    b.ToTable("TeacherAttendances");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Tokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Upload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("UploadTypeid")
                        .HasColumnType("int");

                    b.Property<byte[]>("file")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("UploadTypeid");

                    b.ToTable("Uploads");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.UploadType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UploadsType");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.WorkContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("TeacherID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TeacherID");

                    b.ToTable("WorkContracts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            ConcurrencyStamp = "1",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "2",
                            ConcurrencyStamp = "2",
                            Name = "Secretariat",
                            NormalizedName = "Secretariat"
                        },
                        new
                        {
                            Id = "3",
                            ConcurrencyStamp = "3",
                            Name = "Parent",
                            NormalizedName = "Parent"
                        },
                        new
                        {
                            Id = "4",
                            ConcurrencyStamp = "4",
                            Name = "Teacher",
                            NormalizedName = "Teacher"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "GetUsers",
                            ClaimValue = "GetUsers",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "AddUsers",
                            ClaimValue = "AddUsers",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "GetStudentsCourse",
                            ClaimValue = "GetStudentsCourse",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "UpdateStudentsCourse",
                            ClaimValue = "UpdateStudentsCourse",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "GetTeachersCourse",
                            ClaimValue = "GetTeachersCourse",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "UpdateTeachersCourse",
                            ClaimValue = "UpdateTeachersCourse",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "GetContracts",
                            ClaimValue = "GetContracts",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "ManageEvents",
                            ClaimValue = "ManageEvents",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "GetEvents",
                            ClaimValue = "GetEvents",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "GetStudentsAttendance",
                            ClaimValue = "GetStudentsAttendance",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "UpdateStudentsAttendance",
                            ClaimValue = "UpdateStudentsAttendance",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "GetTeachersAttendance",
                            ClaimValue = "GetTeachersAttendance",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "UpdateTeachersAttendance",
                            ClaimValue = "UpdateTeachersAttendance",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "InsertUpdateStudentsReports",
                            ClaimValue = "InsertUpdateStudentsReports",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "GetStudentsReports",
                            ClaimValue = "GetStudentsReports",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 16,
                            ClaimType = "ApproveReports",
                            ClaimValue = "ApproveReports",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 17,
                            ClaimType = "ManagePayrolls",
                            ClaimValue = "ManagePayrolls",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 18,
                            ClaimType = "ManageBooks",
                            ClaimValue = "ManageBooks",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 19,
                            ClaimType = "DeleteSchoolData",
                            ClaimValue = "DeleteSchoolData",
                            RoleId = "1"
                        },
                        new
                        {
                            Id = 20,
                            ClaimType = "ResetData",
                            ClaimValue = "ResetData",
                            RoleId = "1"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TeacherCourse", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("TeacherID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CourseID", "TeacherID");

                    b.HasIndex("TeacherID");

                    b.ToTable("TeacherCourse");
                });

            modelBuilder.Entity("UploadCourse", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("UploadID")
                        .HasColumnType("int");

                    b.HasKey("CourseID", "UploadID");

                    b.HasIndex("UploadID");

                    b.ToTable("UploadCourse");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<bool>("ActiveUser")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Birthplace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Graduation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("CourseEvent", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.Event", null)
                        .WithMany()
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FekraHubAPI.Data.Models.CourseSchedule", null)
                        .WithMany()
                        .HasForeignKey("ScheduleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Course", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.Room", "Room")
                        .WithMany("Course")
                        .HasForeignKey("RoomId");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.CourseSchedule", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.Course", "Course")
                        .WithMany("CourseSchedule")
                        .HasForeignKey("CourseID");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Event", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.EventType", "EventType")
                        .WithMany("Event")
                        .HasForeignKey("TypeID");

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.ParentInvoice", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.Student", "Student")
                        .WithMany("parentInvoices")
                        .HasForeignKey("StudentID");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.PayRoll", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.ApplicationUser", "User")
                        .WithMany("PayRoll")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Report", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.Student", "Student")
                        .WithMany("Report")
                        .HasForeignKey("StudentId");

                    b.HasOne("FekraHubAPI.Data.Models.ApplicationUser", "User")
                        .WithMany("Report")
                        .HasForeignKey("UserId");

                    b.Navigation("Student");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Room", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.Location", "Location")
                        .WithMany("room")
                        .HasForeignKey("LocationID");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Student", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.Course", "Course")
                        .WithMany("Student")
                        .HasForeignKey("CourseID");

                    b.HasOne("FekraHubAPI.Data.Models.ApplicationUser", "User")
                        .WithMany("Student")
                        .HasForeignKey("ParentID");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.StudentAttendance", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.Course", "Course")
                        .WithMany("StudentAttendance")
                        .HasForeignKey("CourseID");

                    b.HasOne("FekraHubAPI.Data.Models.AttendanceStatus", "AttendanceStatus")
                        .WithMany("StudentAttendance")
                        .HasForeignKey("StatusID");

                    b.HasOne("FekraHubAPI.Data.Models.Student", "Student")
                        .WithMany("StudentAttendance")
                        .HasForeignKey("StudentID");

                    b.Navigation("AttendanceStatus");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.StudentContract", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.Student", "Student")
                        .WithMany("StudentContract")
                        .HasForeignKey("StudentID");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.TeacherAttendance", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.Course", "Course")
                        .WithMany("TeacherAttendance")
                        .HasForeignKey("CourseID");

                    b.HasOne("FekraHubAPI.Data.Models.AttendanceStatus", "AttendanceStatus")
                        .WithMany("TeacherAttendance")
                        .HasForeignKey("StatusID");

                    b.HasOne("FekraHubAPI.Data.Models.ApplicationUser", "Teacher")
                        .WithMany("TeacherAttendance")
                        .HasForeignKey("TeacherID");

                    b.Navigation("AttendanceStatus");

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Tokens", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.ApplicationUser", "User")
                        .WithOne("Token")
                        .HasForeignKey("FekraHubAPI.Data.Models.Tokens", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Upload", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.UploadType", "UploadType")
                        .WithMany("Upload")
                        .HasForeignKey("UploadTypeid");

                    b.Navigation("UploadType");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.WorkContract", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.ApplicationUser", "User")
                        .WithMany("WorkContract")
                        .HasForeignKey("TeacherID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeacherCourse", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FekraHubAPI.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UploadCourse", b =>
                {
                    b.HasOne("FekraHubAPI.Data.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FekraHubAPI.Data.Models.Upload", null)
                        .WithMany()
                        .HasForeignKey("UploadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.AttendanceStatus", b =>
                {
                    b.Navigation("StudentAttendance");

                    b.Navigation("TeacherAttendance");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Course", b =>
                {
                    b.Navigation("CourseSchedule");

                    b.Navigation("Student");

                    b.Navigation("StudentAttendance");

                    b.Navigation("TeacherAttendance");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.EventType", b =>
                {
                    b.Navigation("Event");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Location", b =>
                {
                    b.Navigation("room");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Room", b =>
                {
                    b.Navigation("Course");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.Student", b =>
                {
                    b.Navigation("Report");

                    b.Navigation("StudentAttendance");

                    b.Navigation("StudentContract");

                    b.Navigation("parentInvoices");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.UploadType", b =>
                {
                    b.Navigation("Upload");
                });

            modelBuilder.Entity("FekraHubAPI.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("PayRoll");

                    b.Navigation("Report");

                    b.Navigation("Student");

                    b.Navigation("TeacherAttendance");

                    b.Navigation("Token")
                        .IsRequired();

                    b.Navigation("WorkContract");
                });
#pragma warning restore 612, 618
        }
    }
}
